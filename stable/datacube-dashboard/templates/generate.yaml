{{- $externalDb := .Values.global.externalDatabase }}
{{- $dc := .Values.global.datacube }}
{{- $cubedash := .Values.cubedash }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ $externalDb.database }}-cubedash-generate"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: cubedash
spec:
  schedule: {{ $cubedash.generate.cron | quote }}
  successfulJobsHistoryLimit: {{ $cubedash.generate.historyLimit}}
  failedJobsHistoryLimit: {{ $cubedash.generate.historyLimit }}
  suspend: {{ $cubedash.generate.suspend }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: "{{ $externalDb.database }}-cubedash-generate"
          labels:
            heritage: {{.Release.Service | quote }}
            release: {{.Release.Name | quote }}
            chart: "{{.Chart.Name}}-{{.Chart.Version}}"
          annotations:
          {{- range $key, $value := $cubedash.annotations }}
            {{ $key }}: {{ $value | quote }}
          {{- end }}
        spec:
          initContainers:
          - name: postgres-listener
            image: alpine
            command: ["sh", "-c", "for i in $(seq 1 200); do nc -z -w3 {{ $externalDb.host }} {{ $externalDb.port }} && exit 0 || sleep 3; done; exit 1"]
          containers:
          - name: cubedash-generate
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: Always
            args: [ {{- range $cubedash.generate.dockerArgs }} {{ . | quote }}, {{ end -}} ]
            env:
            - name: DB_HOSTNAME
              value: {{ $externalDb.host | quote }}
            - name: DB_PORT
              value: {{ $externalDb.port | quote }}
            - name: DB_DATABASE
              value: {{ $externalDb.database | quote }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $externalDb.database }}
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $externalDb.database }}
                  key: postgres-password
            {{- if $cubedash.additionalEnvironmentVars }}
            {{- range $arg, $value := $cubedash.additionalEnvironmentVars }}
            - name: {{ $arg | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          restartPolicy: Never
          {{- with $cubedash.resources }}
          resources:
            {{- with .limits }}
            limits:
              {{ if .cpu }}cpu: {{ .cpu | quote }} {{ end }}
              {{ if .memory }}memory: {{ .memory | quote }} {{ end }}
            {{- end }}
            {{- with .requests }}
              requests:
              {{ if .cpu }}cpu: {{ .cpu | quote }} {{ end }}
              {{ if .memory }}memory: {{ .memory | quote }} {{ end }}
            {{- end }}
          {{- end }}