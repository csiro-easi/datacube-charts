apiVersion: apps/v1beta2
kind: Deployment
{{ $externalDb := .Values.global.externalDatabase }}
{{ $dc := .Values.global.datacube }}
metadata:
  name: {{ include "datacube-wps.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "datacube-wps.name" . }}
    helm.sh/chart: {{ include "datacube-wps.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "datacube-wps.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "datacube-wps.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
      {{- range $key, $value := .Values.wps.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      initContainers:
      {{- if .Values.wps.config.docker }}
      - name: wps-config
        image: "{{ $.Values.wps.config.docker.repository }}:{{ $.Values.wps.config.docker.tag }}"
        imagePullPolicy: {{ $.Values.wps.config.docker.pullPolicy }}
        args: [ "cp", "-f", "{{ .Values.wps.config.docker.src }}", "{{ .Values.wps.config.path }}/{{ .Values.wps.config.filename }}" ]
        volumeMounts:
        - mountPath: {{ .Values.wps.config.path }}
          name: wps-config-volume
      {{- end }}
      containers:
        - name: wps
          env:
          {{- if .Values.wps.config.url }}
          - name: WPS_CONFIG_URL
            value: {{ .Values.wps.config.url | quote }}
          {{- end }}
          {{- if or .Values.wps.config.configMap .Values.wps.config.docker }}
          - value: "{{ .Values.wps.config.path }}/{{ .Values.wps.config.filename }}"
            name: WPS_CONFIG_PATH
          {{- end }}
          - name: DB_HOSTNAME
            value: {{ $externalDb.host | quote }}
          - name: DB_PORT
            value: {{ $externalDb.port | quote }}
          - name: DB_DATABASE
            value: {{ $externalDb.database | quote }}
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ $externalDb.database }}
                key: postgres-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $externalDb.database }}
                key: postgres-password
          - name: VIRTUAL_HOST
            value: localhost,127.0.0.
          - name: DATACUBE_CONFIG_PATH
            value: {{ $dc.configPath }}
          - name: WPS_BASEURL
            value: {{ tpl .Values.wps.baseurl .  | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /?service=WPS&request=GetCapabilities&version=1.0.0
              port: http
          readinessProbe:
            httpGet:
              path: /?service=WPS&request=GetCapabilities&version=1.0.0
              port: http
          volumeMounts:
          - mountPath: /opt/outputs/
            name: output-volume
          {{- if or .Values.wps.config.configMap .Values.wps.config.docker }}
          - mountPath: {{ .Values.wps.config.path }}
            name: wps-config-volume
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: output-volume
        emptyDir: {}
      {{- if or .Values.wps.config.configMap .Values.wps.config.docker }}
      - name: wps-config-volume
      {{- if .Values.wps.config.configMap }}
        configMap:
          name: {{ .Values.wps.config.configMap }}
      {{- else if .Values.wps.config.docker }}
        emptyDir: {}
      {{- end }}
      {{- end }}
