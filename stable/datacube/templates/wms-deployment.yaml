apiVersion: extensions/v1beta1
kind: Deployment
{{- $externalDb := .Values.global.externalDatabase }}
{{- $dc := .Values.global.datacube }}
{{- $image := .Values.global.image }}
{{- $prometheus := .Values.prometheus }}
{{- $profiling := .Values.profiling }}
{{- $envname := .Values.global.clusterInfo }}
metadata:
  name: "{{ .Release.Name }}-{{ $envname.envName }}-wms"
  labels:
    app: {{ template "datacube.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if not .Values.wms.autoscaling }}
  replicas: {{ .Values.minReplicas }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wms.maxSurge | quote }}
      maxUnavailable: {{ .Values.wms.maxUnavailable | quote }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "datacube.name" . }}
        release: {{ .Release.Name }}
      annotations:
      {{- range $key, $value := .Values.wms.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      containers:
      - name: wms
        env:
        {{- if $dc.wmsConfigURL }}
        - name: WMS_CONFIG_URL
          value: {{ $dc.wmsConfigURL | quote }}
        {{- end }}
        {{- if $dc.wms_config }}
        - value: "{{ $dc.wms_config.mountPath }}/{{ $dc.wms_config.configMap }}.py"
          name: WMS_CONFIG_PATH
        {{- end }}
        - name: DB_HOSTNAME
          value: {{ $externalDb.host | quote }}
        - name: DB_PORT
          value: {{ $externalDb.port | quote }}
        - name: DB_DATABASE
          value: {{ $externalDb.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ $externalDb.database }}
              key: postgres-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $externalDb.database }}
              key: postgres-password
        - name: VIRTUAL_HOST
          value: localhost,127.0.0.
        - name: DATACUBE_CONFIG_PATH
          value: {{ $dc.configPath }}
        {{- if $prometheus.enabled }}
        - name: prometheus_multiproc_dir
          value: {{ $prometheus.path | quote }}
        {{- end }}
        {{- if $profiling.enabled }}
        - name: PROFILER_FILE_PATH
          value: {{ $profiling.path }}
        - name: PROFILER
          value: {{ 1 | quote }}
        {{- end }}
        {{- if .Values.wms.additionalEnvironmentVars }}
        {{- range $arg, $value := .Values.wms.additionalEnvironmentVars }}
        - name: {{ $arg | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        image: "{{ $image.repository }}:{{ $image.tag }}"
        imagePullPolicy: {{ $image.pullPolicy }}
        ports:
        - containerPort: 8000
        {{- with .Values.wms.resources }}
        resources:
          {{- with .limits }}
          limits:
            {{ if .cpu }} cpu: {{ .cpu | quote }} {{ end }}
            {{ if .memory }} memory: {{ .memory | quote }} {{ end }}
          {{- end }}
          {{- with .requests }}
          requests:
            {{ if .cpu }} cpu: {{ .cpu | quote }} {{ end }}
            {{ if .memory }} memory: {{ .memory | quote }} {{ end }}
          {{- end }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --silent 'http://localhost:8000/?service=WMS&request=GetCapabilities&version=1.3.0' | grep -q -F '<Layer queryable=\"1\">'"
          initialDelaySeconds: 30
          periodSeconds: 30
        args: [ {{- range .Values.wms.dockerArgs }} {{ . | quote }}, {{ end -}} ]
        terminationGracePeriodSeconds: 60
        volumeMounts:
        {{- if $prometheus.enabled }}
        - mountPath: {{ $prometheus.path }}
          name: prometheus-volume
        {{- end }}
        {{- if $profiling.enabled }}
        - mountPath: {{ $profiling.path }}
          name: profiling-volume
        {{- end }}
        {{- if $dc.wms_config }}
        - mountPath: {{ $dc.wms_config.mountPath }}
          name: wms-config-volume
        {{- end }}
      restartPolicy: Always
      volumes:
      {{- if $prometheus.enabled }}
      - name: prometheus-volume
        emptyDir: {}
      {{- end }}
      {{- if $profiling.enabled }}
      - name: profiling-volume
        emptyDir: {}
      {{- end }}
      {{- if $dc.wms_config }}
      - name: wms-config-volume
        configMap:
          name: {{ $dc.wms_config.configMap }}
      {{- end }}
status: {}
