{{- if not .Values.adaptive.enabled }}
{{- $externalDb := .Values.global.externalDatabase }}
{{- $dc := .Values.global.datacube }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "datacube-dask.fullname" . }}-worker
  labels:
    app.kubernetes.io/name: {{ include "datacube-dask.name" . }}
    helm.sh/chart: {{ include "datacube-dask.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.minReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "datacube-dask.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "datacube-dask.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.worker.annotations | indent 8 }}
    spec:
      containers:
        - name: {{ template "datacube-dask.name" . }}-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ {{- range .Values.worker.command }} {{ . | quote }}, {{ end -}}  ]
          args:
          {{- if not .Values.worker.schedulerAddress }}
          - {{ include "datacube-dask.fullname" . }}:{{ .Values.scheduler.port }}
          {{- else }}
          - {{ .Values.worker.schedulerAddress }}
          {{- end }}
          {{- range .Values.worker.args }}
          - {{ . | quote }}
          {{- end }}
          env:
          - name: DB_HOSTNAME
            value: {{ $externalDb.host | quote }}
          - name: DB_PORT
            value: {{ $externalDb.port | quote }}
          - name: DB_DATABASE
            value: {{ $externalDb.database | quote }}
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ $externalDb.database }}
                key: postgres-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $externalDb.database }}
                key: postgres-password
          - name: DATACUBE_CONFIG_PATH
            value: {{ $dc.configPath }}          
{{- if .Values.worker.env }}
{{- range $arg, $value := .Values.worker.env }}
          - name: {{ $arg | quote }}
            value: {{ $value | quote }}
{{- end }}
{{- end }}
          ports:
            - name: worker
              containerPort: {{ .Values.worker.port }}
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #     - dask-scheduler-health.py
          #     - --port
          #     - {{ .Values.scheduler.port | quote }}
          #   initialDelaySeconds: 30
          #   periodSeconds: 60
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
    {{- with .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
